#!/usr/bin/env node

var optimist = require('optimist');
var argv = optimist
    .usage('Usage: roco [-tT] [env] [command]')
    .describe('t', 'list avaliable tasks')
    .describe('T', 'list avaliable tasks with descriptions')
    .describe('v', 'print version')
    .argv;

var env, command;
if (argv._[1]) {
    env = argv._[0];
    command = argv._[1];
} else if (argv._[0]) {
    command = argv._[0];
}

require('../lib/rockout').create({
    env: env||process.env.APP_ENV||process.env.ENV||process.env.NODE_ENV||'deployment',
    cwd: process.cwd(),
    home: process.env.HOME||process.env.HOMEPATH,
    hosts: (process.env.HOSTS||'').split(',').filter(function (v) { return v; })
})
.on('ready', function (roco) {

    if (argv.v) {
        console.log(require(__dirname + '/../package.json').version);

    } else if (argv.T) {
        roco.list(argv.T);

    } else if (argv.t) {
        roco.list(argv.t, true);

    } else if (argv._.length) {
        roco.perform(command);

    } else {
        console.error([
            optimist.help(),
            'Environment variables:',
            '  APP    - name of app',
            '  HOSTS  - comma separated list of hosts to run remote commands',
            '  PORT   - application port (for deploy setup)',
        ].join('\n'));
    }

})
.on('error', function (err) {

    console.error(err.stack);

});
